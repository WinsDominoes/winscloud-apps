@import url("../fonts/Inter-VariableFont_slnt\,wght.ttf");

:root {
    color-scheme: light dark;

    --light-bg-color: #fafafa;
    --light-fg-color: rgba(0, 0, 0, 0.8);
    --light-nav-bg-color: #ffffff;
    --light-nav-fg-color: rgba(0, 0, 0, 0.8);
    --light-nav-border-color: rgba(0, 0, 0, 0.8);
    --light-nav-backdrop-color: #fafafa;
    --light-nav-shade-color: rgba(0, 0, 0, 0.12);
    --light-nav-darker-shade-color: rgba(0, 0, 0, 0.12);
    --light-card-bg-color: #ffffff;
    --light-card-fg-color: rgba(0, 0, 0, 0.8);
    --light-card-shade-color: rgba(0, 0, 0, 0.07);

    --dark-bg: #242424;
    --dark-fg-color: #ffffff;
    --dark-nav-bg-color: #303030;
    --dark-nav-fg-color: #ffffff;
    --dark-nav-border-color: #ffffff;
    --dark-nav-backdrop-color: #242424;
    --dark-nav-shade-color: rgba(0, 0, 0, 0.36);
    --dark-nav-darker-shade-color: rgba(0, 0, 0, 0.9);
    --dark-card-bg-color: rgba(255, 255, 255, 0.08);
    --dark-card-fg-color: #ffffff;
    --dark-card-shade-color: rgba(0, 0, 0, 0.36);
}

@font-face {
    font-family: Inter;
    src: url("../fonts/Inter-VariableFont_slnt\,wght.ttf");
}

* {
    background-color: light-dark(var(--light-bg-color), var(--dark-bg-color));
    color: light-dark(var(--light-fg-color), var(--dark-fg-color));
}

*, *:before, *:after {
    box-sizing: border-box;
}

html, body {
    font-family: Inter;

    margin: 0;
    padding: 0;

    box-sizing: border-box;
}

h1, h2, h3, h4, h5, h6, p {
    margin: 0;
    padding: 0;
}

a {
    text-decoration: none;
}

header {
    position: sticky;
    top: 0;
}

.light {
    color-scheme: light;
}

.dark {
    color-scheme: dark;
}

.text-bold {
    font-weight: 600;
}

.nav {
    width: 100%;
    height: 50px;
    display: flex;
    box-shadow: 1px 1px 4px 0 light-dark(var(--light-nav-shade-color), var(--dark-nav-shade-color));
    align-items: center;
}

.nav > .nav-header {
    flex: 0.95;
    padding-left: 1rem;
    padding: 0 1rem 0 1rem;
}

.nav > .nav-header > .nav-title {
    font-size: 22px;
    color: light-dark(var(--light-nav-fg-color), var(--dark-nav-fg-color));
}

.nav > .nav-list {
    display: flex;
    margin: 0 1rem 0 auto;
    gap: 0.5rem;
    padding-left: 0;
}

.nav > .nav-list > a {
    text-decoration: none;
    cursor: pointer;
    width: 80px;
    text-align: center;
    border-radius: 7px;
    padding: 0.5rem 0 0.5rem 0;
}

.nav > .nav-list > a:hover {
    background-color: light-dark(rgba(0, 0, 0, 0.1),hsla(0,0%,100%,.05));
    
}

.nav > .nav-list > a > li {
    list-style-type: none;
}

.nav > #nav-check {
    display: none;
}

.nav > .nav-btn > label > i {
    display: none;
}

.container {
    margin:  10px calc(10px + 1.5625vw);
    padding: 10px;
}

.main-banner {
    height: 300px;
    border-radius: 0.75rem;
    background-color: #2ec27e;
    box-shadow: 1px 1px 4px 0 light-dark(var(--light-nav-shade-color), var(--dark-nav-shade-color));

    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;

    padding: 10px; 
}

.main-banner h1 {
    font-size: calc(45px + .5vw);
}

.main-banner p {
    font-size: calc(12px + .5vw);
}

.main-apps {
    display: flex;
    flex-direction: column;
    text-align: center;
    justify-items: center;
}

.main-apps > #heading {
    margin: 2rem 0 2rem 0;
}

.app-grid {
    --grid-layout-gap: 1rem;
    --grid-column-count: 3;
    --grid-item--min-width: 350px;

    /**
    * Calculated values.
    */
    --gap-count: calc(var(--grid-column-count) - 1);
    --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
    --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));

    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr));
    grid-gap: var(--grid-layout-gap);
    align-items: center;
}

.app-grid__item {
    display: flex;
    flex-direction: row;
    gap: 1rem;
    align-items: center;
    text-align: start;

    padding: 1rem;
    cursor: pointer;
    
    color: light-dark(var(--light-card-fg-color), var(--dark-card-fg-color));
    background-color: light-dark(var(--light-card-bg-color), var(--dark-card-bg-color));
    box-shadow: 1px 1px 5px 0 light-dark(var(--light-card-shade-color), var(--dark-card-shade-color));
    text-decoration: none;

    border-radius: 1rem;

    transition: transform 0.4s;
    -webkit-transition: transform 0.4s;
}

.app-grid__item:hover {
    transform: scale(1.03);
}

.app-grid__item > .details {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
}

.app-grid__item > img {
    max-width: 100%;
    height: 96px;
    border-radius: 0.75rem;
}

/* Screens smaller than 480 pixels */
@media (max-width: 420px) {
    .nav {
        width: 100%;
        height: 50px;

        background-color: light-dark(var(--light-nav-bg-color), var(--dark-nav-bg-color));
    }

    .nav > .nav-btn {
        display: inline-block;
        position: absolute;
        right: 0;
        top: 0;
        padding-top: 0.2rem;
    }

    .nav > .nav-btn > label {
        display: inline-block; 
        padding: 13px;
    }

    .nav > .nav-btn > label > i {
        display: block; 
    }

    .nav > .nav-list {
        position: fixed;
        display: flex;
        flex-direction: column;
        gap: 0.25rem;
        width: 100%;
        height: 0;
        transition: all 0.3s ease-in;
        top: 50px;
        left: 0;
        overflow: hidden;
        background-color: light-dark(var(--light-nav-bg-color), var(--dark-nav-bg-color));
    }

    .nav > .nav-list > a {
        width: 100%;
        text-align: start;
        padding: 0.5rem 0.75rem 0.5rem 0.75rem;
    }

    .nav > .nav-list > a:hover {
        background-color: light-dark(rgba(0, 0, 0, 0.1),hsla(0,0%,100%,.05));
    }

    .nav > #nav-check:checked ~ .nav-list {
        height: calc(100vh - 50px);
        padding: 5px;
    }
    
    .app-grid {
        --grid-layout-gap: 1rem;
        --grid-column-count: 3;
        --grid-item--min-width: 0;
    
        /**
        * Calculated values.
        */
        --gap-count: calc(var(--grid-column-count) - 1);
        --total-gap-width: calc(var(--gap-count) * var(--grid-layout-gap));
        --grid-item--max-width: calc((100% - var(--total-gap-width)) / var(--grid-column-count));
    
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(max(var(--grid-item--min-width), var(--grid-item--max-width)), 1fr));
        grid-gap: var(--grid-layout-gap);
        align-items: center;
    }

    .app-grid__item > img {
        max-width: 100%;
        height: 64px;
    }
}